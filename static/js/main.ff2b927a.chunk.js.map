{"version":3,"sources":["utils/storeApi.js","component/List/Input/InputCard.js","component/List/Input/InputContainer.js","component/List/Title.js","component/List/Card.js","component/List/List.js","utils/store.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","card","width","margin","spacing","paddingBottom","input","btnconfirm","background","color","alpha","confirm","InputCard","setOpen","listId","type","classes","useState","title","setTitle","useContext","StoreApi","addMoreCard","addMoreList","Paper","className","InputBase","onChange","e","target","value","multiline","onBlur","fullwidth","inputProps","placeholder","Button","onClick","console","log","IconButton","root","marginTop","addCard","padding","backgroundColor","InputContainer","open","Collapse","in","elevation","Typography","editableTitleContainer","display","editableTitle","marginLeft","flexGrow","fontSize","fontWeight","Title","newTitle","setNewTitle","updateListTitle","storeApi","autoFocus","fullWidth","Card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","cardContainer","List","list","CssBaseline","droppableId","droppableProps","cards","map","data","lists","listIds","minHeight","overflowY","App","Store","setData","Provider","newCard","uuid","newState","newListId","newlist","onDragEnd","result","destination","source","splice","sourceList","destinatonList","draggingCard","filter","newSate","listd","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff2b927a.chunk.js","sourcesContent":["import React from \"react\";\nexport default React.createContext(null);\n","import { Paper, InputBase, Button, IconButton } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { makeStyles, alpha } from \"@material-ui/core/styles\";\nimport StoreApi from \"../../../utils/storeApi\";\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    width:'280px',\n    margin: theme.spacing(0, 1, 1, 1),\n    paddingBottom: theme.spacing(4),\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n  btnconfirm: {\n    background: \"green\",\n    color: \"#fff\",\n    \"&:hover\": {\n      background: alpha(\"#5AAC44\", 0.75),\n    },\n  },\n  confirm: {\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n}));\nfunction InputCard({ setOpen, listId, type }) {\n  const classes = useStyle();\n  const [title, setTitle] = useState(\"\");\n  const { addMoreCard, addMoreList } = useContext(StoreApi);\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleBtnConfirm = () => {\n    if (type === \"card\") {\n    console.log(\"abc\");\n\n      addMoreCard(title, listId);\n      setTitle(\"\");\n      setOpen(false);\n    } else {\n      addMoreList(title);\n      setTitle(\"\");\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Paper className={classes.card}>\n          <InputBase\n            onChange={handleOnChange}\n            multiline\n            onBlur={() => setOpen(false)}\n            fullwidth\n            inputProps={{ className: classes.input }}\n            value={title}\n            placeholder={\n              type === \"card\"\n                ? \"Enter title of this card...\"\n                : \"Enter list title...\"\n            }\n          ></InputBase>\n        </Paper>\n      </div>\n      <div className={classes.confirm} >\n        <Button className={classes.btnconfirm} onClick={handleBtnConfirm} >\n          {type === \"card\" ? \"Add Card\" : \"Add List\"}\n        </Button>\n        <IconButton onClick={() => setOpen(false)}>\n          <ClearIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default InputCard;\n","import React, { useState } from \"react\";\nimport { Collapse, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles, alpha } from \"@material-ui/core/styles\";\nimport InputCard from \"./InputCard\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    width: \"300px\",\n    marginTop: theme.spacing(1),\n  },\n  addCard: {\n    padding: theme.spacing(1, 1, 1, 2),\n    margin: theme.spacing(0, 1, 1, 1),\n    backgroundColor: \"#ebecf0\",\n    \"&:hover\": {\n      backgroundColor: alpha(\"#fff\", 0.25),\n    },\n  },\n}));\nfunction InputContainer({ listId, type }) {\n  const classes = useStyle();\n  const [open, setOpen] = useState(false);\n  return (\n    <div className={classes.root}>\n      <Collapse in={open}>\n        <InputCard setOpen={setOpen} listId={listId} type={type} />\n      </Collapse>\n      <Collapse in={!open}>\n        <Paper\n          className={classes.addCard}\n          elevation={0}\n          onClick={() => setOpen(!open)}\n        >\n          <Typography>\n            {type === \"card\" ? \"+ Add a card\" : \"+ Add another list\"}\n          </Typography>\n        </Paper>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default InputContainer;\n","import React, { useContext, useState } from \"react\";\nimport { Typography, InputBase } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport storeApi from \"../../utils/storeApi\";\nconst useStyle = makeStyles((theme) => ({\n  editableTitleContainer: {\n    margin: theme.spacing(1),\n    display: \"flex \",\n  },\n  editableTitle: {\n    marginLeft: theme.spacing(1),\n    flexGrow: 1,\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n  },\n  input: {\n    margin: theme.spacing(1),\n    \"&:focus\": {\n      backgroundColor: \"#ddd\",\n      fontSize: \"1.2rem\",\n      fontWeight: \"bold\",\n    },\n  },\n}));\nfunction Title({ title,listId }) {\n  const [newTitle, setNewTitle] = useState(title);\n  const { updateListTitle } = useContext(storeApi);\n  const [open, setOpen] = useState(title);\n  const classes = useStyle();\n  const handleOnChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n  const handleOnBlur = () => {\n    setOpen(false);\n    updateListTitle(newTitle,listId);\n  };\n  return (\n    <div>\n      {open ? (\n        <div>\n          <InputBase\n            onChange={handleOnChange}\n            value={newTitle}\n            autoFocus\n            inputProps={{\n              className: classes.input,\n            }}\n            fullWidth\n            onBlur={handleOnBlur}\n          />\n        </div>\n      ) : (\n        <div className={classes.editableTitleContainer}>\n          <Typography\n            onClick={() => setOpen(!open)}\n            className={classes.editableTitle}\n          >\n            {\" \"}\n            {title}\n          </Typography>\n          <MoreHorizIcon />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Title;\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(1, 1, 1, 2),\n    margin: theme.spacing(1),\n  },\n}));\nfunction Card({ card,index }) {\n  const classes = useStyle();\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided)=>(\n\n      <div\n      ref={provided.innerRef} {...provided.dragHandleProps}{...provided.draggableProps}>\n        <Paper className={classes.card}>{card.title}</Paper>\n      </div>\n      )}\n    </Draggable>\n  );\n}\nexport default Card;\n","import React from \"react\";\nimport { CssBaseline, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport Card from \"./Card\";\nimport InputContainer from \"./Input/InputContainer\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    width: \"300px\",\n    backgroundColor: \"#ebecf0\",\n    marginLeft: theme.spacing(1),\n  },\n  cardContainer: {\n    marginTop: theme.spacing(4),\n  },\n}));\nfunction List({ list, index }) {\n  const classes = useStyle();\n  return (\n    <Draggable draggableId={list.id} index={index}>\n      {(provided) => (\n        <div {...provided.draggableProps} ref={provided.innerRef}>\n          <Paper className={classes.root} {...provided.dragHandleProps}>\n            <CssBaseline />\n            <Title title={list.title} listId={list.id} />\n            <Droppable droppableId={list.id}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className={classes.cardContainer}\n                >\n                  {list.cards.map((card, index) => (\n                    <Card key={card.id} card={card} index={index} />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <InputContainer listId={list.id} type=\"card\" />\n          </Paper>\n        </div>\n      )}\n    </Draggable>\n  );\n}\nexport default List;\n","const cards = [\n  {\n    id: \"card-1\",\n    title: \"Learning how to cook\",\n  },\n  {\n    id: \"card-2\",\n    title: \"Making sandwich\",\n  },\n  {\n    id: \"card-3\",\n    title: \"Taking the trash out\",\n  },\n];\n\nconst data = {\n  lists: {\n    \"list-1\": {\n      id: \"list-1\",\n      title: \"Todo\",\n      cards,\n    },\n    \"list-2\": {\n      id: \"list-2\",\n      title: \"Doing\",\n      cards:[],\n    },\n  },\n  listIds: [\"list-1\",\"list-2\"],\n};\n\nexport default data;\n","import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport InputContainer from \"./component/List/Input/InputContainer\";\nimport List from \"./component/List/List\";\nimport Store from \"./utils/store\";\nimport StoreApi from \"./utils/storeApi\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    background: \"#1c4966\",\n    overflowY: \"auto\",\n  },\n}));\nfunction App() {\n  const [data, setData] = useState(Store);\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    console.log(newListId);\n    const newlist = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newlist,\n      },\n    };\n    setData(newState);\n  };\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    console.log(destination, source, draggableId);\n    if (!destination) {\n      return;\n    }\n    if (type === \"list\") {\n      const newListId = data.listIds;\n      newListId.splice(source.index, 1);\n      newListId.splice(destination.index, 0, draggableId);\n      return;\n    }\n    const sourceList = data.lists[source.droppableId];\n    const destinatonList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinatonList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        listd: {\n          ...data.lists,\n          [sourceList.id]: destinatonList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinatonList.cards.splice(destination.index, 0, draggingCard);\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinatonList.id]: destinatonList,\n        },\n      };\n      setData(newState);\n    }\n  };\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n          {(provided) => (\n            <div\n              className={classes.root}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {data.listIds.map((listId, index) => {\n                const list = data.lists[listId];\n                return <List list={list} key={listId} index={index} />;\n              })}\n              <InputContainer type=\"list\" />\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </StoreApi.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}